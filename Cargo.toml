[package]
name = "bevy-jam-6"
version = "0.1.0"
edition = "2021"

[features]
default = []
dev = [
    "bevy/file_watcher", 
    "bevy/bevy_remote", 
    "bevy/track_location", 
    "bevy/trace",
    "avian3d/debug-plugin",
    "dep:bevy-inspector-egui",
    "dep:bevy_dev_tools",
]
trace = [
    "bevy/trace",
    "bevy/trace_tracy"
]

[dependencies]
# bevy ecosystem crates (production)
bevy_enhanced_input = "0.12"
avian3d = { version = "0.3", features = [
  "3d",
  "f32",
  "parry-f32",
  "parallel",
  "serialize",
  "collider-from-mesh"
] }
bevy-tnua = "0.24"
bevy-tnua-avian3d = "0.5"
bevy_tween = "0.8"

# general rust crates
serde = "1.0"
serde_json = "1.0"
nonmax = "0.5.5"

# Development-only tools (now as optional dependencies)
bevy-inspector-egui = { version = "0.31", optional = true }
bevy_dev_tools = { version = "0.16.1", optional = true }

# Set max log levels. This helps avoid unwanted low-severity log spam, which can affect performance.
log = { version = "0.4", features = [
    "max_level_debug",
    #"release_max_level_warn",
] }
tracing = { version = "0.1", features = [
    "max_level_debug",
    #"release_max_level_warn",
] }

[dependencies.bevy]
version = "0.16.1"
default-features = false

[target.'cfg(not(target_arch = "wasm32"))'.dependencies.bevy]
version = "0.16.1"
default-features = false
features = [
  "serialize",
  "bevy_asset",
  "bevy_state",
  "bevy_pbr",
  "bevy_ui",
  "bevy_ui_picking_backend",
  "default_font",
  "tonemapping_luts",
  "animation",
  "bevy_mesh_picking_backend",
  "bevy_animation",
  "bevy_gltf",
  "png",
  "bevy_window",
  "bevy_winit",
  "x11"
]

[target.'cfg(target_arch = "wasm32")'.dependencies.bevy]
version = "0.16.1"
default-features = false
features = [
  "serialize",
  "bevy_asset",
  "bevy_state",
  "bevy_pbr",
  "bevy_ui",
  "bevy_ui_picking_backend",
  "default_font",
  "tonemapping_luts",
  "animation",
  "bevy_mesh_picking_backend",
  "bevy_animation",
  "bevy_gltf",
  "png",
  "bevy_window",
  "bevy_winit",
  "track_location",
  "webgpu"
]

# Idiomatic Bevy code often triggers these lints, and the CI workflow treats them as errors.
# In some cases they may still signal poor code quality however, so consider commenting out these lines.
[lints.clippy]
# Bevy supplies arguments to systems via dependency injection, so it's natural for systems to
# request more than 7 arguments -- which triggers this lint.
too_many_arguments = "allow"
# Queries that access many components may trigger this lint.
type_complexity = "allow"

# Enable a small amount of optimization in the dev profile.
[profile.dev]
opt-level = 1

# Enable a large amount of optimization in the dev profile for dependencies.
[profile.dev.package."*"]
opt-level = 3

# Remove expensive debug assertions due to <https://github.com/bevyengine/bevy/issues/14291>
[profile.dev.package.wgpu-types]
debug-assertions = false

[profile.release]
# Compile the entire crate as one unit.
# Slows compile times, marginal improvements.
codegen-units = 1
# Do a second optimization pass over the entire program, including dependencies.
# Slows compile times, marginal improvements.
lto = "thin"

[profile.wasm-dev]
inherits = "dev"
opt-level = 1

[profile.server-dev]
inherits = "dev"

[profile.android-dev]
inherits = "dev"

[profile.ci]
inherits = "dev"
opt-level = 0
debug = "line-tables-only"
codegen-units = 4
